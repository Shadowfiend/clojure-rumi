; The below assumes the REPL is being run from the root directory of the source
; code.
(add-classpath (str "file://" (System/getProperty "user.dir") "/"))
(ns rumi-logic-test
  (:require rumi-logic ext.fact))
(refer 'rumi-logic)
(refer 'fact)


; Supporting methods for the clojure-rumi tests.
(defn #^{:doc "Generates a random tile from the expected tile space."}
  random-tile []
  {:color (nth (seq colors) (rand-int 4)) :number (+ 1 (rand-int 13))})

(defn create-list
  "Generate a seq of random length between 1 and 100 whose elements are generated by the passed parameterless method"
  ([f]
      (create-list f '() (+ 1 (rand-int 99))))
  ([f elem-list num]
      (if (= 1 num)
        (cons (f) elem-list)
        (recur f (cons (f) elem-list) (- num 1)))))

; The actual tests.

(fact "a random tile should have a number"
      [x (seq (create-list random-tile))]
      (not (nil? (get x :number))))

(fact "the number of a random tile should be between 1 and 13"
      [x (seq (create-list random-tile))]
      (and (< 0 (get x :number))
           (> 14 (get x :number))))

(print-color-results (verify-facts 'rumi-logic-test))
